{"ast":null,"code":"var _jsxFileName = \"/Users/shaquille/Desktop/codework/ShaqBookSearch/shaq-book-search/client/src/components/SearchForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport BookCard from \"../BookCard\";\nimport Container from \"../Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchForm = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [books, setBooks] = useState([]);\n\n  const fetchBooks = async e => {\n    if (search.length < 3) return;\n    e.preventDefault();\n    const queryURL = `https://www.googleapis.com/books/v1/volumes?q=${search}`;\n    const response = await fetch(queryURL);\n    const payload = await response.json();\n    setBooks(payload.items || []);\n    setSearch(\"\");\n  };\n\n  const postBooks = async book => {\n    const queryURL = `/api/books`;\n    const config = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    };\n    const response = await fetch(queryURL, config);\n    const payload = await response.json();\n    return payload;\n  };\n\n  const saveBook = book => {\n    const newSavedBook = {\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"https://picsum.photos/200/300\",\n      link: book.volumeInfo.previewLink,\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors\n    };\n    postBooks(newSavedBook);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"mb-2 mr-sm-2\",\n        placeholder: \"Enter author or title\",\n        size: \"lg\",\n        type: \"text\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"mb-2\",\n        onClick: fetchBooks,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), books.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Your Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BookCard, {\n        books: books,\n        saveBook: saveBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your search results will appear below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchForm, \"WAVAhWuPdo1uqBsEv4EwNttfRYU=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["/Users/shaquille/Desktop/codework/ShaqBookSearch/shaq-book-search/client/src/components/SearchForm/index.js"],"names":["React","useState","Button","Form","BookCard","Container","SearchForm","search","setSearch","books","setBooks","fetchBooks","e","length","preventDefault","queryURL","response","fetch","payload","json","items","postBooks","book","config","method","headers","Accept","body","JSON","stringify","saveBook","newSavedBook","description","volumeInfo","image","imageLinks","thumbnail","link","previewLink","title","authors","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC9B,QAAIL,MAAM,CAACM,MAAP,GAAgB,CAApB,EAAuB;AACvBD,IAAAA,CAAC,CAACE,cAAF;AACA,UAAMC,QAAQ,GAAI,iDAAgDR,MAAO,EAAzE;AACA,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;AACA,UAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAT,IAAAA,QAAQ,CAACQ,OAAO,CAACE,KAAR,IAAiB,EAAlB,CAAR;AACAZ,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GARD;;AAUA,QAAMa,SAAS,GAAG,MAAOC,IAAP,IAAgB;AAChC,UAAMP,QAAQ,GAAI,YAAlB;AACA,UAAMQ,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFI;AAMbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANO,KAAf;AAQA,UAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,EAAWQ,MAAX,CAA5B;AACA,UAAML,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACA,WAAOD,OAAP;AACD,GAbD;;AAeA,QAAMY,QAAQ,GAAIR,IAAD,IAAU;AACzB,UAAMS,YAAY,GAAG;AACnBC,MAAAA,WAAW,EAAEV,IAAI,CAACW,UAAL,CAAgBD,WADV;AAEnBE,MAAAA,KAAK,EAAEZ,IAAI,CAACW,UAAL,CAAgBE,UAAhB,GACHb,IAAI,CAACW,UAAL,CAAgBE,UAAhB,CAA2BC,SADxB,GAEH,+BAJe;AAKnBC,MAAAA,IAAI,EAAEf,IAAI,CAACW,UAAL,CAAgBK,WALH;AAMnBC,MAAAA,KAAK,EAAEjB,IAAI,CAACW,UAAL,CAAgBM,KANJ;AAOnBC,MAAAA,OAAO,EAAElB,IAAI,CAACW,UAAL,CAAgBO;AAPN,KAArB;AASAnB,IAAAA,SAAS,CAACU,YAAD,CAAT;AACD,GAXD;;AAaA,sBAEE,QAAC,SAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,WAAW,EAAC,uBAFd;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,KAAK,EAAExB,MALT;AAME,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,SAAS,CAACI,CAAC,CAAC6B,MAAF,CAASC,KAAV;AAN5B;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAuC,QAAA,OAAO,EAAE/B,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGF,KAAK,CAACI,MAAN,gBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEJ,KAAjB;AAAwB,QAAA,QAAQ,EAAEqB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADD,gBAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA0BD,CApED;;GAAMxB,U;;KAAAA,U;AAsEN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport BookCard from \"../BookCard\";\nimport Container from \"../Container\"\n\nconst SearchForm = () => {\n  const [search, setSearch] = useState(\"\");\n  const [books, setBooks] = useState([]);\n\n  const fetchBooks = async (e) => {\n    if (search.length < 3) return;\n    e.preventDefault();\n    const queryURL = `https://www.googleapis.com/books/v1/volumes?q=${search}`;\n    const response = await fetch(queryURL);\n    const payload = await response.json();\n    setBooks(payload.items || []);\n    setSearch(\"\");\n  };\n\n  const postBooks = async (book) => {\n    const queryURL = `/api/books`;\n    const config = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(book),\n    };\n    const response = await fetch(queryURL, config);\n    const payload = await response.json();\n    return payload;\n  };\n\n  const saveBook = (book) => {\n    const newSavedBook = {\n      description: book.volumeInfo.description,\n      image: book.volumeInfo.imageLinks\n        ? book.volumeInfo.imageLinks.thumbnail\n        : \"https://picsum.photos/200/300\",\n      link: book.volumeInfo.previewLink,\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors,\n    };\n    postBooks(newSavedBook);\n  };\n\n  return (\n\n    <Container>\n      <Form>\n        <h2>Book Search</h2>\n        <Form.Control\n          className=\"mb-2 mr-sm-2\"\n          placeholder=\"Enter author or title\"\n          size=\"lg\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <Button type=\"submit\" className=\"mb-2\" onClick={fetchBooks}>\n          Search\n        </Button>\n      </Form>\n      {books.length ? (\n        <>\n          <h5>Your Results</h5>\n          <BookCard books={books} saveBook={saveBook} />\n        </>\n      ) : (\n        <p>Your search results will appear below.</p>)}\n    </Container>\n  );\n};\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}